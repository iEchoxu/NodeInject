name: build
on: [push]
jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, windows]
        include:
        - build: linux
          os: ubuntu-latest
          rust: nightly
          target: x86_64-unknown-linux-musl
          shell: bash
          archive-name: Typora_NodeInject-linux.zip
        - build: windows
          os: windows-2022
          rust: nightly-x86_64-msvc
          target: x86_64-pc-windows-msvc
          shell: powershell
          archive-name: Typora_NodeInject-windows.7z
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@nightly
      with:
        toolchain: ${{ matrix.rust }}
        targets: ${{ matrix.target }}

    - name: Build binary - [node-inject]
      run: cargo build --verbose --release --bin node-inject --target ${{ matrix.target }}
      env:
        RUST_BACKTRACE: 1
    - name: Build binary - [license-gen]
      run: cargo build --verbose --release --bin license-gen --target ${{ matrix.target }}
      env:
        RUST_BACKTRACE: 1

    - name: Build archive
      shell: bash
      run: |
        mkdir archive
        cp LICENSE README.md archive/
        if [ "${{ matrix.build }}" = "windows" ]; then
          cp "./target/${{ matrix.target }}/release/node-inject.exe" ./archive/
          cp "./target/${{ matrix.target }}/release/license-gen.exe" ./archive/
          cd archive
          7z a "${{ matrix.archive-name }}" LICENSE README.md node-inject.exe license-gen.exe
        else
          cp "./target/${{ matrix.target }}/release/node-inject" ./archive/
          cp "./target/${{ matrix.target }}/release/license-gen" ./archive/
          cd archive
          zip -r ${{ matrix.archive-name }} *
        fi
    - name: Upload archive
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.archive-name }}
        path: archive/${{ matrix.archive-name }}
